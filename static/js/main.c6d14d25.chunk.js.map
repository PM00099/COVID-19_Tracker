{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","components/CountryPicker/CountryPicker.jsx","api/index.js","components/Chart/Chart.jsx","App.js","index.js","App.module.css","components/CountryPicker/CountryPicker.module.css","components/Chart/Chart.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","CountryPicker","handleCountryChange","useState","fetchedCountries","setFetchedCountries","useEffect","a","fetchCountries","fetchAPI","console","log","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","map","country","i","key","url","fetchData","changeableUrl","axios","get","fetchDailyData","modifiedData","dailyData","total","date","reportDate","countries","name","Chart","setDailyData","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChar","options","legend","display","title","text","App","state","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6d14d25.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__-ZTds\",\"card\":\"Cards_card__1OyKk\",\"infected\":\"Cards_infected__2vJko\",\"recovered\":\"Cards_recovered__5DAsF\",\"deaths\":\"Cards_deaths__2SsBw\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n    if (!confirmed) {\r\n        return 'Loading....';\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>\r\n                            Recovered\r\n                        </Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recovries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>\r\n                            Deaths\r\n                        </Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cards;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\nconsole.log(fetchedCountries);\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import axios from 'axios';\r\nimport CountryPicker from '../components/CountryPicker/CountryPicker';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n    try {\r\n        const { data: { confirmed,recovered,deaths,lastUpdate } } = await axios.get(changeableUrl);\r\n        \r\n        return { confirmed,recovered,deaths,lastUpdate };\r\n    } catch (error) {\r\nconsole.log(error);\r\n\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async ()=> {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths:dailyData.deaths.total,\r\n            date:dailyData.reportDate,\r\n        }))\r\n        return modifiedData;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries }} = await axios.get(`${url}/countries`);\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        \r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        console.log(dailyData);\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n            ? (<Line\r\n                data={{\r\n                    labels: dailyData.map(({ date }) => date),\r\n                    datasets: [{\r\n                        data: dailyData.map(({ confirmed }) => confirmed),\r\n                        label: 'Infected',\r\n                        borderColor: '#3333ff',\r\n                        fill: true,\r\n                    }, {\r\n                        data: dailyData.map(({ deaths }) => deaths),\r\n                        label: 'Deaths',\r\n                        borderColor: 'red',\r\n                        backgroundColor: 'rgba(255,0,0,0.5)',\r\n                        fill: true,\r\n                    }],\r\n                }}\r\n            />) : null\r\n    );\r\n\r\n    const barChar = (\r\n        confirmed\r\n            ? (\r\n                <Bar data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        backgroundColor: ['rgba(0, 0, 255, 0.5)',\r\n                            'rgba(0, 255, 0, 0.5)',\r\n                            'rgba(255, 0, 0, 0.5)',\r\n                        ],\r\n                        data: [confirmed.value, recovered.value, deaths.value]\r\n                    }]\r\n                }}\r\n                    options={{\r\n                        legend: { display: false },\r\n                        title: { display: true, text: `Current States in ${country}` },\r\n                    }}\r\n                />\r\n            ) : null\r\n    )\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChar : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport { fetchData } from './api';\r\nimport styles from './App.module.css';\r\n\r\nimport coronaImage from './images/image.png';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country:'',\r\n    }\r\n    async componentDidMount() {\r\n        const data = await fetchData();\r\n\r\n        this.setState({ data });\r\n    }\r\nhandleCountryChange = async (country) => {\r\n    const data = await fetchData(country);\r\n    this.setState({ data,country:country });\r\n\r\n}\r\n    render() {\r\n        const { data,country } = this.state;\r\n\r\n        return (\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\r\n                <Cards data={data} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1acIq\",\"image\":\"App_image__3tq6H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__21-6o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__18Dwz\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}